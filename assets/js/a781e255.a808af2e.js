"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[633],{7176:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});var r=s(4848),t=s(8453);const c={},d="6 \u7f51\u7edc\u7f16\u7a0b",i={id:"Knowledge-Notes/NetworkProgram",title:"6 \u7f51\u7edc\u7f16\u7a0b",description:"6.1 \u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb",source:"@site/docs/Knowledge-Notes/06_NetworkProgram.md",sourceDirName:"Knowledge-Notes",slug:"/Knowledge-Notes/NetworkProgram",permalink:"/docs/Knowledge-Notes/NetworkProgram",draft:!1,unlisted:!1,editUrl:"https://github.com/100askTeam/linux-docs/tree/main/docs/Knowledge-Notes/06_NetworkProgram.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"KnowledgeNotes",previous:{title:"4 Linux\u8fdb\u7a0b\u95f4\u901a\u4fe1",permalink:"/docs/Knowledge-Notes/ProcessCommunication"},next:{title:"7 \u6444\u50cf\u5934V4L2\u7f16\u7a0b",permalink:"/docs/Knowledge-Notes/CameraV4L2"}},l={},o=[{value:"<strong>6.1</strong> <strong>\u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb</strong>",id:"61-\u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb",level:2},{value:"<strong>6.1.1</strong> <strong>\u4e94\u5c42\u56e0\u7279\u7f51\u534f\u8bae\u6808</strong>",id:"611-\u4e94\u5c42\u56e0\u7279\u7f51\u534f\u8bae\u6808",level:3},{value:"6.1.2 \u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u7684\u5e38\u89c1\u534f\u8bae",id:"612-\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u7684\u5e38\u89c1\u534f\u8bae",level:3},{value:"<strong>6.2</strong> <strong>\u7f51\u7edc\u7f16\u7a0b\u4e4bTCP/UDP\u6bd4\u8f83</strong>",id:"62-\u7f51\u7edc\u7f16\u7a0b\u4e4btcpudp\u6bd4\u8f83",level:2},{value:"6.2.1 TCP\u548cUDP \u539f\u7406\u4e0a\u7684\u533a\u522b",id:"621-tcp\u548cudp-\u539f\u7406\u4e0a\u7684\u533a\u522b",level:3},{value:"6.2.2 \u4e3a\u4f55\u5b58\u5728UDP\u534f\u8bae",id:"622-\u4e3a\u4f55\u5b58\u5728udp\u534f\u8bae",level:3},{value:"6.2.3 TCP/UDP\u7f51\u7edc\u901a\u4fe1\u5927\u6982\u4ea4\u4e92\u56fe",id:"623-tcpudp\u7f51\u7edc\u901a\u4fe1\u5927\u6982\u4ea4\u4e92\u56fe",level:3},{value:"<strong>6.3</strong> <strong>\u7f51\u7edc\u7f16\u7a0b\u4e3b\u8981\u51fd\u6570\u4ecb\u7ecd</strong>",id:"63-\u7f51\u7edc\u7f16\u7a0b\u4e3b\u8981\u51fd\u6570\u4ecb\u7ecd",level:2},{value:"6.3.1 socket\u51fd\u6570",id:"631-socket\u51fd\u6570",level:3},{value:"6.3.2 bind\u51fd\u6570",id:"632-bind\u51fd\u6570",level:3},{value:"6.3.3 listen\u51fd\u6570",id:"633-listen\u51fd\u6570",level:3},{value:"6.3.4 accept\u51fd\u6570",id:"634-accept\u51fd\u6570",level:3},{value:"6.3.5 connect\u51fd\u6570",id:"635-connect\u51fd\u6570",level:3},{value:"6.3.6 send\u51fd\u6570",id:"636-send\u51fd\u6570",level:3},{value:"6.3.7 recv\u51fd\u6570",id:"637-recv\u51fd\u6570",level:3},{value:"6.3.8 recvfrom\u51fd\u6570\uff08UDP\uff09",id:"638-recvfrom\u51fd\u6570udp",level:3},{value:"6.3.9 sendto\u51fd\u6570\uff08UDP\uff09",id:"639-sendto\u51fd\u6570udp",level:3},{value:"6.3.10 close\u51fd\u6570",id:"6310-close\u51fd\u6570",level:3},{value:"6.3.11 \u8f85\u52a9\u51fd\u6570",id:"6311-\u8f85\u52a9\u51fd\u6570",level:3},{value:"6.4 TCP\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",id:"64-tcp\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",level:2},{value:"6.<strong>4.1</strong> \u670d\u52a1\u5668\u7aef\u4ee3\u7801",id:"641-\u670d\u52a1\u5668\u7aef\u4ee3\u7801",level:3},{value:"6.4.2 \u5ba2\u6237\u7aef\u4ee3\u7801",id:"642-\u5ba2\u6237\u7aef\u4ee3\u7801",level:3},{value:"6.4.3 Makefile\u6587\u4ef6",id:"643-makefile\u6587\u4ef6",level:3},{value:"6.4.4 \u6267\u884c",id:"644-\u6267\u884c",level:3},{value:"6.5 UDP\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",id:"65-udp\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",level:2},{value:"6.<strong>5.1</strong> \u670d\u52a1\u5668\u7aef\u4ee3\u7801",id:"651-\u670d\u52a1\u5668\u7aef\u4ee3\u7801",level:3},{value:"<strong>6.5.2</strong> <strong>\u5ba2\u6237\u7aef\u4ee3\u7801</strong>",id:"652-\u5ba2\u6237\u7aef\u4ee3\u7801",level:3},{value:"6.<strong>5.2.1</strong> \u5ba2\u6237\u7aef\u7a0b\u5e8f1",id:"6521-\u5ba2\u6237\u7aef\u7a0b\u5e8f1",level:4},{value:"6.<strong>5.2.2</strong> <strong>\u5ba2\u6237\u7aef\u7a0b\u5e8f2</strong>",id:"6522-\u5ba2\u6237\u7aef\u7a0b\u5e8f2",level:4},{value:"6.5.3 Makefile\u6587\u4ef6",id:"653-makefile\u6587\u4ef6",level:3},{value:"6.5.4 \u6267\u884c",id:"654-\u6267\u884c",level:3}];function a(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"6-\u7f51\u7edc\u7f16\u7a0b",children:"6 \u7f51\u7edc\u7f16\u7a0b"}),"\n",(0,r.jsxs)(e.h2,{id:"61-\u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb",children:[(0,r.jsx)(e.strong,{children:"6.1"})," ",(0,r.jsx)(e.strong,{children:"\u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb"})]}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u8981\u7f16\u5199\u901a\u8fc7\u8ba1\u7b97\u673a\u7f51\u7edc\u901a\u4fe1\u7684\u7a0b\u5e8f\uff0c\u9996\u5148\u8981\u786e\u5b9a\u8fd9\u4e9b\u7a0b\u5e8f\u540c\u901a\u4fe1\u7684\u534f\u8bae\uff08protocol\uff09\uff0c\u5728\u8bbe\u8ba1\u4e00\u4e2a\u534f\u8bae\u7684\u7ec6\u8282\u4e4b\u524d\uff0c\u9996\u5148\u8981\u5206\u6e05\u7a0b\u5e8f\u662f\u7531\u54ea\u4e2a\u7a0b\u5e8f\u53d1\u8d77\u4ee5\u53ca\u54cd\u5e94\u4f55\u65f6\u4ea7\u751f\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4e00\u822c\u8ba4\u4e3aWEB\u670d\u52a1\u5668\u7a0b\u5e8f\u662f\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u5b88\u62a4\u8fdb\u7a0bdeamon\uff09\uff0c\u5b83\u53ea\u5728\u54cd\u5e94\u6765\u81ea\u7f51\u7edc\u7684\u8bf7\u6c42\u65f6\u624d\u53d1\u9001\u7f51\u7edc\u6d88\u606f\u3002\u534f\u8bae\u7684\u53e6\u4e00\u7aef\u662fweb\u5ba2\u6237\u7a0b\u5e8f\uff0c\u5982\u67d0\u79cd\u6d4f\u89c8\u5668\uff0c\u4e0e\u670d\u52a1\u5668\u8fdb\u7a0b\u7684\u901a\u4fe1\u603b\u662f\u7531\u5ba2\u6237\u8fdb\u7a0b\u53d1\u8d77\u3002\u5927\u591a\u6570\u7f51\u7edc\u5e94\u7528\u5c31\u662f\u6309\u7167\u5212\u5206\u4e3a\u5ba2\u6237\uff08clinet\uff09\u548c\u670d\u52a1\u5668\uff08server\uff09\u6765\u7ec4\u7ec7\u7684\u3002"}),"\n",(0,r.jsxs)(e.h3,{id:"611-\u4e94\u5c42\u56e0\u7279\u7f51\u534f\u8bae\u6808",children:[(0,r.jsx)(e.strong,{children:"6.1.1"})," ",(0,r.jsx)(e.strong,{children:"\u4e94\u5c42\u56e0\u7279\u7f51\u534f\u8bae\u6808"})]}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u4e3a\u4e86\u7ed9\u7f51\u7edc\u534f\u8bae\u7684\u8bbe\u8ba1\u63d0\u4f9b\u4e00\u4e2a\u7ed3\u6784\uff0c\u7f51\u7edc\u8bbe\u8ba1\u8005\u4ee5\u5206\u5c42\uff08layer\uff09\u7684\u65b9\u5f0f\u7ec4\u7ec7\u534f\u8bae\u4ee5\u53ca\u5b9e\u73b0\u8fd9\u4e9b\u534f\u8bae\u7684\u7f51\u7edc\u786c\u4ef6\u548c\u8f6f\u4ef6\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u5206\u5c42\u63d0\u4f9b\u4e86\u4e00\u79cd\u7ed3\u6784\u5316\u65b9\u5f0f\u6765\u8ba8\u8bba\u7cfb\u7edf\u7ec4\u4ef6\u3002\u6a21\u5757\u5316\u4f7f\u66f4\u65b0\u7cfb\u7edf\u7ec4\u4ef6\u66f4\u4e3a\u5bb9\u6613\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u534f\u8bae\u6808\u662f\u5404\u5c42\u6240\u6709\u534f\u8bae\u7684\u603b\u548c\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"http://photos.100ask.net/NewHomeSite/NetworkProgram_Image001.png",alt:"NetworkProgram_Image001"})}),"\n",(0,r.jsx)(e.p,{children:"\u4e94\u5c42\u56e0\u7279\u7f51\u534f\u8bae\u6808"}),"\n",(0,r.jsx)(e.p,{children:"\u5e94\u7528\u5c42\uff1a\u5e94\u7528\u5c42\u662f\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u53ca\u5b83\u4eec\u7684\u5e94\u7528\u5c42\u534f\u8bae\u5b58\u7559\u7684\u5730\u65b9\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u8fd0\u8f93\u5c42\uff1a\u56e0\u7279\u7f51\u7684\u8fd0\u8f93\u5c42\u5728\u5e94\u7528\u7a0b\u5e8f\u7aef\u70b9\u4e4b\u95f4\u4f20\u4ece\u5e94\u7528\u5c42\u62a5\u6587\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u7f51\u7edc\u5c42\uff1a\u56e0\u7279\u7f51\u5443\u7f51\u7edc\u5c42\u8d1f\u8d23\u5c06\u79f0\u4e3a\u6570\u636e\u5305\uff08datagram\uff09\u7684\u7f51\u7edc\u5c42\u5206\u7ec4\u4ece\u4e00\u53f0\u4e3b\u673a\u79fb\u52a8\u5230\u53e6\u4e00\u53f0\u4e3b\u673a\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u94fe\u8def\u5c42\uff1a\u56e0\u7279\u7f51\u7684\u7f51\u7edc\u5c42\u901a\u8fc7\u6e90\u548c\u76ee\u7684\u5730\u4e4b\u95f4\u7684\u4e00\u7cfb\u5217\u8def\u7531\u5668\u8def\u7531\u6570\u636e\u62a5\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u7269\u7406\u5c42\uff1a\u867d\u7136\u94fe\u8def\u5c42\u7684\u4efb\u52a1\u662f\u5c06\u6574\u4e2a\u5e27\u4ece\u4e00\u4e2a\u7f51\u7edc\u5143\u7d20\u79fb\u52a8\u5230\u4e34\u8fd1\u7684\u7f51\u7edc\u5143\u7d20\uff0c\u800c\u7269\u7406\u5c42\u7684\u4efb\u52a1\u662f\u5c06\u8be5\u5e27\u7684\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u7279\u4ece\u4e00\u4e2a\u8282\u70b9\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"612-\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u7684\u5e38\u89c1\u534f\u8bae",children:"6.1.2 \u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u7684\u5e38\u89c1\u534f\u8bae"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u6211\u4eec\u91cd\u70b9\u4ecb\u7ecd\u548c\u5e94\u7528\u5c42\u7f16\u7a0b\u5173\u7cfb\u5bc6\u5207\u7684\u5e94\u7528\u5c42\u548c\u8fd0\u8f93\u5c42\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u5e94\u7528\u5c42\uff1a"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u56e0\u7279\u7f51\u7684\u5e94\u7528\u5c42\u5305\u542b\u5f88\u591a\u534f\u8bae\uff0c\u4f8b\u5982HTTP\uff0cSMTP\uff0c\u548c FTP\u3002\u6211\u4eec\u770b\u5230\u7684\u67d0\u4e9b\u7f51\u7edc\u529f\u80fd\uff0c\u6bd4\u5982\u5c06www.baidu.com\u8fd9\u6837\u5bf9\u4eba\u53cb\u597d\u7684\u7aef\u7cfb\u7edf\u540d\u5b57\u8f6c\u6362\u4e3a32\u6bd4\u7279\u7f51\u7edc\u5730\u5740\uff0c\u4e5f\u662f\u501f\u52a9\u4e8e\u7279\u5b9a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u5373\u57df\u540d\u7cfb\u7edf\uff08DNS\uff09\u5b8c\u6210\u7684\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u5e94\u7528\u5c42\u7684\u534f\u8bae\u5206\u5e03\u5728\u591a\u4e2a\u7aef\u7cfb\u7edf\u4e0a\uff0c\u4e00\u4e2a\u7aef\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u534f\u8bae\u4e0e\u53e6\u4e00\u4e2a\u7aef\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u4ea4\u6362\u4fe1\u606f\u5206\u7ec4\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u8fd0\u8f93\u5c42\uff1a"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u5728\u82f1\u7279\u7f51\u4e2d\u6709\u4e24\u4e2a\u8fd0\u8f93\u534f\u8bae\uff0c\u5373TCP\u548cUDP\uff0c\u5229\u7528\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u80fd\u8fd0\u8f93\u5e94\u7528\u5c42\u62a5\u6587\u3002\u6211\u4eec\u5199\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\u5177\u4f53\u9009\u62e9\u54ea\u4e2a\u8fd0\u8f93\u5c42\u534f\u8bae\u5e94\u8be5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u786e\u5b9a\uff08\u540e\u9762\u4f1a\u5177\u4f53\u8bb2\u89e3\uff09\u3002"}),"\n",(0,r.jsxs)(e.h2,{id:"62-\u7f51\u7edc\u7f16\u7a0b\u4e4btcpudp\u6bd4\u8f83",children:[(0,r.jsx)(e.strong,{children:"6.2"})," ",(0,r.jsx)(e.strong,{children:"\u7f51\u7edc\u7f16\u7a0b\u4e4bTCP/UDP\u6bd4\u8f83"})]}),"\n",(0,r.jsx)(e.h3,{id:"621-tcp\u548cudp-\u539f\u7406\u4e0a\u7684\u533a\u522b",children:"6.2.1 TCP\u548cUDP \u539f\u7406\u4e0a\u7684\u533a\u522b"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\tTCP\u5411\u5b83\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u9762\u5411\u8fde\u63a5\u7684\u670d\u52a1\u3002\u8fd9\u79cd\u670d\u52a1\u5305\u62ec\u4e86\u5e94\u7528\u5c42\u62a5\u6587\u5411\u76ee\u7684\u5730\u7684\u786e\u4fdd\u4f20\u9012\u548c\u6d41\u91cf\u63a7\u5236\uff08\u5373\u53d1\u9001\u65b9/\u63a5\u6536\u65b9\u901f\u7387\u5339\u914d\uff09\u3002\u8fd9\u79cd\u670d\u52a1\u5305\u62ec\u4e86\u5e94\u7528\u5c42\u62a5\u6587\u5212\u5206\u4e3a\u77ed\u62a5\u6587\uff0c\u5e76\u63d0\u4f9b\u62e5\u585e\u63a7\u5236\u673a\u5236\uff0c\u56e0\u6b64\u5f53\u7f51\u7edc\u62e5\u585e\u65f6\u6e90\u6291\u5236\u5176\u4f20\u8f93\u901f\u7387\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\tUDP\u534f\u8bae\u5411\u5b83\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u65e0\u8fde\u63a5\u670d\u52a1\u3002\u8fd9\u662f\u4e00\u79cd\u4e0d\u63d0\u4f9b\u4e0d\u5fc5\u8981\u670d\u52a1\u7684\u670d\u52a1\uff0c\u6ca1\u6709\u53ef\u9760\u6027\uff0c\u6ca1\u6709\u6d41\u91cf\u63a7\u5236\uff0c\u4e5f\u6ca1\u6709\u62e5\u585e\u63a7\u5236\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"622-\u4e3a\u4f55\u5b58\u5728udp\u534f\u8bae",children:"6.2.2 \u4e3a\u4f55\u5b58\u5728UDP\u534f\u8bae"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u65e2\u7136TCP\u63d0\u4f9b\u4e86\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\uff0c\u800cUDP\u4e0d\u80fd\u63d0\u4f9b\uff0c\u90a3\u4e48TCP\u662f\u5426\u603b\u662f\u9996\u9009\u5462\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u56e0\u4e3a\u6709\u8bb8\u591a\u5e94\u7528\u66f4\u9002\u5408\u7528UDP\uff0c\u539f\u56e0\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a"}),"\n",(0,r.jsx)(e.p,{children:"a.  \u5173\u4e8e\u4f55\u65f6\u53d1\u9001\u4ec0\u4e48\u6570\u636e\u63a7\u5236\u7684\u66f4\u4e3a\u7cbe\u7ec6\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u91c7\u7528UDP\u65f6\u53ea\u8981\u5e94\u7528\u8fdb\u7a0b\u5c06\u6570\u636e\u4f20\u9012\u7ed9UDP\uff0cUDP\u5c31\u4f1a\u7acb\u5373\u5c06\u5176\u4f20\u9012\u7ed9\u7f51\u7edc\u5c42\u3002\u800cTCP\u6709\u91cd\u4f20\u673a\u5236\uff0c\u800c\u4e0d\u7ba1\u53ef\u9760\u4ea4\u4ed8\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u4f46\u662f\u5b9e\u65f6\u5e94\u7528\u901a\u5e38\u4e0d\u5e0c\u671b\u8fc7\u5206\u7684\u5ef6\u8fdf\u62a5\u6587\u6bb5\u7684\u4f20\u9001\uff0c\u4e14\u80fd\u5bb9\u5fcd\u4e00\u90e8\u5206\u6570\u636e\u4e22\u5931\u3002"}),"\n",(0,r.jsx)(e.p,{children:"b.  \u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c\u4e0d\u4f1a\u5f15\u5165\u5efa\u7acb\u8fde\u63a5\u65f6\u7684\u5ef6\u8fdf\u3002"}),"\n",(0,r.jsx)(e.p,{children:"c.  \u65e0\u8fde\u63a5\u72b6\u6001\uff0c\u80fd\u652f\u6301\u66f4\u591a\u7684\u6d3b\u8dc3\u5ba2\u6237\u3002"}),"\n",(0,r.jsx)(e.p,{children:"d.  \u5206\u7ec4\u9996\u90e8\u5f00\u9500\u8f83\u5c0f\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"623-tcpudp\u7f51\u7edc\u901a\u4fe1\u5927\u6982\u4ea4\u4e92\u56fe",children:"6.2.3 TCP/UDP\u7f51\u7edc\u901a\u4fe1\u5927\u6982\u4ea4\u4e92\u56fe"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u4e0b\u9762\u6211\u4eec\u5206\u522b\u753b\u51fa\u8fd0\u7528TCP\u534f\u8bae\u548c\u8fd0\u7528UDP\u534f\u8bae\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5927\u6982\u4ea4\u4e92\u56fe\u3002"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"http://photos.100ask.net/NewHomeSite/NetworkProgram_Image002.png",alt:"NetworkProgram_Image002"})}),"\n",(0,r.jsx)("center",{children:(0,r.jsx)("p",{children:"\u9762\u5411\u8fde\u63a5\u7684TCP\u6d41\u6a21\u5f0f"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"http://photos.100ask.net/NewHomeSite/NetworkProgram_Image003.png",alt:"NetworkProgram_Image003"})}),"\n",(0,r.jsx)("center",{children:(0,r.jsx)("p",{children:"UDP\u7528\u6237\u6570\u636e\u5305\u6a21\u5f0f"})}),"\n",(0,r.jsxs)(e.h2,{id:"63-\u7f51\u7edc\u7f16\u7a0b\u4e3b\u8981\u51fd\u6570\u4ecb\u7ecd",children:[(0,r.jsx)(e.strong,{children:"6.3"})," ",(0,r.jsx)(e.strong,{children:"\u7f51\u7edc\u7f16\u7a0b\u4e3b\u8981\u51fd\u6570\u4ecb\u7ecd"})]}),"\n",(0,r.jsx)(e.p,{children:"\u4e0b\u9762\u5168\u90e8\u51fd\u6570\u7684\u5934\u6587\u4ef6\u90fd\u662f"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"#include <sys/types.h>\n#include <sys/socket.h>\n"})}),"\n",(0,r.jsx)(e.h3,{id:"631-socket\u51fd\u6570",children:"6.3.1 socket\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int socket(int domain, int type,int protocol);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u6b64\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"domain"}),"\u662f\u7f51\u7edc\u7a0b\u5e8f\u6240\u5728\u7684\u4e3b\u673a\u91c7\u7528\u7684\u901a\u8baf\u534f\u65cf(AF_UNIX\u548cAF_INET\u7b49)\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"AF_UNIX\u53ea\u80fd\u591f\u7528\u4e8e\u5355\u4e00\u7684Unix \u7cfb\u7edf\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u800cAF_INET\u662f\u9488\u5bf9Internet\u7684\uff0c\u56e0\u800c\u53ef\u4ee5\u5141\u8bb8\u8fdc\u7a0b\u901a\u4fe1\u4f7f\u7528\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"type"}),"\u662f\u7f51\u7edc\u7a0b\u5e8f\u6240\u91c7\u7528\u7684\u901a\u8baf\u534f\u8bae(SOCK_STREAM,SOCK_DGRAM\u7b49)\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"SOCK_STREAM\u8868\u660e\u7528\u7684\u662fTCP \u534f\u8bae\uff0c\u8fd9\u6837\u4f1a\u63d0\u4f9b\u6309\u987a\u5e8f\u7684\uff0c\u53ef\u9760\uff0c\u53cc\u5411\uff0c\u9762\u5411\u8fde\u63a5\u7684\u6bd4\u7279\u6d41\u3002"}),"\n",(0,r.jsx)(e.p,{children:"SOCK_DGRAM \u8868\u660e\u7528\u7684\u662fUDP\u534f\u8bae\uff0c\u8fd9\u6837\u53ea\u4f1a\u63d0\u4e0d\u53ef\u9760\uff0c\u65e0\u8fde\u63a5\u7684\u901a\u4fe1\u3002"}),"\n",(0,r.jsxs)(e.p,{children:["\u5173\u4e8e",(0,r.jsx)(e.strong,{children:"protocol"}),"\uff0c\u7531\u4e8e\u6307\u5b9a\u4e86type\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u4e00\u822c\u53ea\u8981\u75280\u6765\u4ee3\u66ff\u5c31\u53ef\u4ee5\u4e86\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u6b64\u51fd\u6570\u6267\u884c\u6210\u529f\u65f6\u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1,\u770berrno\u53ef\u77e5\u9053\u51fa\u9519\u7684\u8be6\u7ec6\u60c5\u51b5\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"632-bind\u51fd\u6570",children:"6.3.2 bind\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int bind(int sockfd, struct sockaddr *my_addr, int addrlen);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u4ece\u51fd\u6570\u7528\u4e8e\u5c06\u5730\u5740\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5957\u63a5\u5b57\u3002\u4e00\u53f0\u7535\u8111\u4e0a\u53ef\u80fd\u6709\u591a\u4e2aIP\u548c\u7aef\u53e3\uff0c\u8fd9\u4e2a\u5957\u63a5\u5b57\u8981\u7ed1\u5b9a\u5230\u54ea\u4e2aIP\u548c\u7aef\u53e3\u9700\u8981\u7528bind\u51fd\u6570\u6765\u7ed1\u5b9a\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"}),"\u662f\u7531socket\u51fd\u6570\u8c03\u7528\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"my_addr"}),"\u662f\u4e00\u4e2a\u6307\u5411sockaddr\u7684\u6307\u9488\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"addrlen"}),"\u662fsockaddr\u7ed3\u6784\u7684\u957f\u5ea6\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockaddr"}),"\u7684\u5b9a\u4e49\uff1a"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"struct sockaddr{\nunisgned short  as_family;\nchar sa_data[14];                  // \u8fd914\u4e2a\u5b57\u8282\u91cc\u9762\uff0c\u542b\u6709 IP \u548c \u7aef\u53e3\uff0c\u4f46\u662f\u4e0d\u660e\u663e\n};\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u4e0d\u8fc7\u7531\u4e8e\u7cfb\u7edf\u7684\u517c\u5bb9\u6027,\u6211\u4eec\u4e00\u822c\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7ed3\u6784(struct sockaddr_in) \u6765\u4ee3\u66ff\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockaddr_in"}),"\u7684\u5b9a\u4e49\uff1a   ",(0,r.jsx)(e.strong,{children:"sockaddr"})," \u548c ",(0,r.jsx)(e.strong,{children:"sockaddr_in"})," \u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"struct sockaddr_in{\nunsigned short          sin_family;     \nunsigned short          sin_port;          // 2\u5b57\u8282   \u8868\u793a\u7aef\u53e3\nstruct in_addr          sin_addr;          // 4\u5b57\u8282   \u8868\u793aIP\u5730\u5740\nunsigned char           sin_zero[8];       // 8\u5b57\u8282   \u4e0d\u7528  2+4+8=14\u5b57\u8282\uff0c\u548c\u4e0a\u9762\u90a3\u4e2a\u7ed3\u6784\u4f53\u4e00\u6837\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5982\u679c\u4f7f\u7528Internet\u6240\u4ee5sin_family\u4e00\u822c\u4e3aAF_INET\u3002"}),"\n",(0,r.jsx)(e.p,{children:"sin_addr\u8fd8\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0csin_addr.s_addr \u8bbe\u7f6e\u4e3aINADDR_ANY\u8868\u793a\u53ef\u4ee5\u548c\u4e3b\u673a\u7684\u6240\u6709IP\u901a\u4fe1\uff0c\u4e5f\u5c31\u662f\u76d1\u6d4b\u6240\u6709\u7684IP\u3002"}),"\n",(0,r.jsx)(e.p,{children:"sin_port\u662f\u8981\u76d1\u542c\u7684\u7aef\u53e3\u53f7\u3002\u8981\u4f7f\u7528 htons(SERVER_PORT)  \u7aef\u53e3\u53f7\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f"}),"\n",(0,r.jsx)(e.p,{children:"bind\u5c06\u672c\u5730\u7684\u7aef\u53e3\u540csocket\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6346\u7ed1\u5728\u4e00\u8d77."}),"\n",(0,r.jsx)(e.p,{children:"\u6210\u529f\u662f\u8fd4\u56de0,\u5931\u8d25\u7684\u60c5\u51b5\u548csocket\u4e00\u6837\uff0c\u8fd4\u56de -1\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"633-listen\u51fd\u6570",children:"6.3.3 listen\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int listen(int sockfd,int backlog);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u6b64\u51fd\u6570\u5ba3\u544a\u670d\u52a1\u5668\u53ef\u4ee5\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"}),"\u662fbind\u540e\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"backlog"}),"\u8bbe\u7f6e\u8bf7\u6c42\u6392\u961f\u7684\u6700\u5927\u957f\u5ea6\u3002\u5f53\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\u548c\u670d\u52a1\u7aef\u76f8\u8fde\u65f6\uff0c\u4f7f\u7528\u8fd9\u4e2a\u8868\u793a\u53ef\u4ee5\u4ecb\u7ecd\u7684\u6392\u961f\u957f\u5ea6\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"listen\u51fd\u6570\u5c06bind\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53d8\u4e3a\u76d1\u542c\u5957\u63a5\u5b57\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u6210\u529f\u662f\u8fd4\u56de0,\u5931\u8d25\u7684\u60c5\u51b5\u548csocket\u4e00\u6837\uff0c\u8fd4\u56de -1\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"634-accept\u51fd\u6570",children:"6.3.4 accept\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int accept(int sockfd, struct sockaddr *addr,int *addrlen);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u670d\u52a1\u5668\u4f7f\u7528\u6b64\u51fd\u6570\u83b7\u5f97\u8fde\u63a5\u8bf7\u6c42\uff0c\u5e76\u4e14\u5efa\u7acb\u8fde\u63a5\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"}),"\u662flisten\u540e\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"addr"}),"\uff0c",(0,r.jsx)(e.strong,{children:"addrlen"}),"\u662f\u7528\u6765\u7ed9\u5ba2\u6237\u7aef\u7684\u7a0b\u5e8f\u586b\u5199\u7684\uff0c\u670d\u52a1\u5668\u7aef\u53ea\u8981\u4f20\u9012\u6307\u9488\u5c31\u53ef\u4ee5\u4e86\uff0c bind,listen\u548caccept\u662f\u670d\u52a1\u5668\u7aef\u7528\u7684\u51fd\u6570\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"accept\u8c03\u7528\u65f6\uff0c\u670d\u52a1\u5668\u7aef\u7684\u7a0b\u5e8f\u4f1a\u4e00\u76f4\u963b\u585e\u5230\u6709\u4e00\u4e2a\u5ba2\u6237\u7a0b\u5e8f\u53d1\u51fa\u4e86\u8fde\u63a5\u3002"}),"\n",(0,r.jsx)(e.p,{children:"accept\u6210\u529f\u65f6\u8fd4\u56de\u6700\u540e\u7684\u670d\u52a1\u5668\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u4e2a\u65f6\u5019\u670d\u52a1\u5668\u7aef\u53ef\u4ee5\u5411\u8be5\u63cf\u8ff0\u7b26\u5199\u4fe1\u606f\u4e86\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1 \u3002"}),"\n",(0,r.jsx)(e.p,{children:"\uff08\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u63cf\u8ff0\u7b26\u662f\u8fd9\u4e2a\u5ba2\u6237\u7aef\u7684\u8c61\u5f81\uff0c\u4e4b\u540e\u63a5\u6536\u53d1\u9001\u5c31\u5411\u8be5\u63cf\u8ff0\u7b26\u64cd\u4f5c\uff09"}),"\n",(0,r.jsx)(e.p,{children:"\u95ee\uff1a\u5982\u4f55\u628a\u5ba2\u6237\u7aef\u7684IP\u5730\u5740\u8f6c\u6362\u4e3a\u6211\u4eec\u5e38\u89c1\u7684\u5f62\u5f0f\uff1f"}),"\n",(0,r.jsx)(e.p,{children:"\u7b54\uff1ainet_ntoa(sockaddr.sin_addr)   \u628a\u8fd9\u4e2a sin_addr \u8f6c\u6362\u4e3a ascii \u683c\u5f0f\u7684\u5b57\u7b26\u4e32"}),"\n",(0,r.jsx)(e.h3,{id:"635-connect\u51fd\u6570",children:"6.3.5 connect\u51fd\u6570"}),"\n",(0,r.jsx)(e.p,{children:"\u5bf9\u4e8eTCP\u7684\u8fde\u63a5\uff0c\u8fd9\u91cc\u4f1a\u67093\u6b21\u63e1\u624b"}),"\n",(0,r.jsx)(e.p,{children:"\u5bf9\u4e8eUDP\u7684\u8fde\u63a5\uff0c\u8fd9\u91cc\u662f\u865a\u5047\u7684\u8fde\u63a5\uff0c\u76ee\u7684\u53ea\u662f\u4e3a\u4e86\u83b7\u5f97IP\u5730\u5740\u8fd9\u4e9b\u6570\u636e\u800c\u5df2"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"int connect(int sockfd, struct sockaddr * serv_addr,int addrlen);\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u53ef\u4ee5\u7528connect\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u5728connect\u4e2d\u6240\u6307\u5b9a\u7684\u5730\u5740\u662f\u60f3\u4e0e\u4e4b\u901a\u4fe1\u7684\u670d\u52a1\u5668\u7684\u5730\u5740\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"}),"\u662fsocket\u51fd\u6570\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"serv_addr"}),"\u50a8\u5b58\u4e86\u670d\u52a1\u5668\u7aef\u7684\u8fde\u63a5\u4fe1\u606f\uff0c\u5176\u4e2dsin_add\u662f\u670d\u52a1\u7aef\u7684\u5730\u5740\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"addrlen"}),"\u662fserv_addr\u7684\u957f\u5ea6\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"connect\u51fd\u6570\u662f\u5ba2\u6237\u7aef\u7528\u6765\u540c\u670d\u52a1\u7aef\u8fde\u63a5\u7684"}),"\n",(0,r.jsx)(e.p,{children:"\u6210\u529f\u65f6\u8fd4\u56de0\uff0csockfd\u662f\u540c\u670d\u52a1\u7aef\u901a\u8baf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08\u5ba2\u6237\u7aef\uff09\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"636-send\u51fd\u6570",children:"6.3.6 send\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"ssize_t send(int sockfd, const void \\*buf, size_t len, int flags);\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"})," \u6307\u5b9a\u53d1\u9001\u7aef\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"buf"})," \u6307\u660e\u4e00\u4e2a\u5b58\u653e\u5e94\u7528\u7a0b\u5e8f\u8981\u53d1\u9001\u6570\u636e\u7684\u7f13\u51b2\u533a\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"len"})," \u6307\u660e\u5b9e\u9645\u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u5b57\u8282\u6570\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"flags"})," \u4e00\u822c\u7f6e0\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u6216\u8005\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u90fd\u7528send\u51fd\u6570\u6765\u5411TCP\u8fde\u63a5\u7684\u53e6\u4e00\u7aef\u53d1\u9001\u6570\u636e"}),"\n",(0,r.jsx)(e.h3,{id:"637-recv\u51fd\u6570",children:"6.3.7 recv\u51fd\u6570"}),"\n",(0,r.jsx)(e.p,{children:"\u3010\u6ca1\u6709\u6570\u636e\u4f1a\u4f11\u7720\u3011"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"ssize_t recv(int sockfd, void *buf, size_t len, int flags);\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sockfd"})," \u6307\u5b9a\u63a5\u6536\u7aef\u5957\u63a5\u5b57\u63cf\u8ff0\u7b26\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"buf"})," \u6307\u660e\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u8be5\u7f13\u51b2\u533a\u7528\u6765\u5b58\u653erecv\u51fd\u6570\u63a5\u6536\u5230\u7684\u6570\u636e\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"len"})," \u6307\u660ebuf\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u53ef\u4ee5\u63a5\u6536\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\uff1b"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"flags"})," \u4e00\u822c\u7f6e0\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u6216\u8005\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u90fd\u7528recv\u51fd\u6570\u4eceTCP\u8fde\u63a5\u7684\u53e6\u4e00\u7aef\u63a5\u6536\u6570\u636e\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u8fd4\u56de\u503c\uff1a\u5e73\u65f6\u4f1a\u963b\u585e\uff0c\u6709\u6570\u636e\u5c31\u8fd4\u56de\u5b9e\u9645\u63a5\u6536\u5230\u4e86\u591a\u5c11\u4e2a\u6570\u636e"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"if(iRecvLen <= 0)"}),"  // \u5219\u8868\u793a\u51fa\u9519\u4e86"]}),"\n",(0,r.jsx)(e.h3,{id:"638-recvfrom\u51fd\u6570udp",children:"6.3.8 recvfrom\u51fd\u6570\uff08UDP\uff09"}),"\n",(0,r.jsx)(e.p,{children:"\u3010\u6ca1\u6709\u6570\u636e\u4f1a\u4f11\u7720\u3011"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"ssize_t recvfrom(int sockfd, void *buf, size_t len, int flags,\n\n\t\t\t\tstruct sockaddr *src_addr, socklen_t *addrlen);\n"})}),"\n",(0,r.jsx)(e.p,{children:"recvfrom\u901a\u5e38\u7528\u4e8e\u3010\u65e0\u8fde\u63a5\u3011\u5957\u63a5\u5b57\uff0c\u56e0\u4e3a\u6b64\u51fd\u6570\u53ef\u4ee5\u83b7\u5f97\u53d1\u9001\u8005\u7684\u5730\u5740\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"src_addr"})," \u662f\u4e00\u4e2astruct sockaddr\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u4fdd\u5b58\u6e90\u673a\u7684IP\u5730\u5740\u53ca\u7aef\u53e3\u53f7\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"addrlen"})," \u5e38\u7f6e\u4e3asizeof \uff08struct sockaddr\uff09\u3002"]}),"\n",(0,r.jsx)(e.h3,{id:"639-sendto\u51fd\u6570udp",children:"6.3.9 sendto\u51fd\u6570\uff08UDP\uff09"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"ssize_t sendto(int sockfd, const void *buf, size_t len, int flags,\n\n\t\t\t   const struct sockaddr *dest_addr, socklen_t addrlen);\n"})}),"\n",(0,r.jsx)(e.p,{children:"sendto\u548csend\u76f8\u4f3c\uff0c\u533a\u522b\u5728\u4e8esendto\u5141\u8bb8\u5728\u65e0\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u4e0a\u6307\u5b9a\u4e00\u4e2a\u76ee\u6807\u5730\u5740\u3002"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"dest_addr"})," \u8868\u793a\u76ee\u5730\u673a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u4fe1\u606f\uff0c"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"addrlen"})," \u5e38\u5e38\u88ab\u8d4b\u503c\u4e3asizeof \uff08struct sockaddr\uff09\u3002\u6ce8\u610f\u8fd9\u4e2a\u4e0d\u662f\u4f20\u5165\u5730\u5740\u4e86\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"sendto"})," \u51fd\u6570\u4e5f\u8fd4\u56de\u5b9e\u9645\u53d1\u9001\u7684\u6570\u636e\u5b57\u8282\u957f\u5ea6\u6216\u5728\u51fa\u73b0\u53d1\u9001\u9519\u8bef\u65f6\u8fd4\u56de\uff0d1\u3002"]}),"\n",(0,r.jsx)(e.h3,{id:"6310-close\u51fd\u6570",children:"6.3.10 close\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"close(iSocketClient);\n"})}),"\n",(0,r.jsx)(e.h3,{id:"6311-\u8f85\u52a9\u51fd\u6570",children:"6.3.11 \u8f85\u52a9\u51fd\u6570"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"#include <arpa/inet.h>\n\n// \u5c06 short \u7c7b\u578b\u7684\u6574\u578b\u7aef\u53e3\u53f7\u8f6c\u6362\u4e3a sockaddr_in \u4e2d\u7684 sin_port \u7c7b\u578b\u7684\u7f51\u7edc\u7aef\u53e3\u53f7\n// \u5c06\u4e3b\u673a\u5b57\u8282\u987a\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\nuint16_t htons(uint16_t hostshort);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\n// \u5c06 IP \u5730\u5740\u7ed3\u6784\u4f53\u8f6c\u6362\u4e3a ascii\u7801\u5e38\u89c1\u683c\u5f0f\nchar *inet_ntoa(struct in_addr in);\n\n$ ./a.out 226.000.000.037      # Last byte is in octal\n226.0.0.31\n$ ./a.out 0x7f.1               # First byte is in hex\n127.0.0.1\n    \n// \u53c2\u65701\uff1acp \u5c31\u662f 192.168.1.1 \u8fd9\u79cd\u683c\u5f0f\u7684IP\u5730\u5740\u5b57\u7b26\u4e32\n// \u53c2\u65702\uff1ainp \u5c31\u662f struct in_addr \u683c\u5f0f\u7684IP\u5730\u5740\uff0c\u4e5f\u5c31\u662f \nint inet_aton(const char *cp, struct in_addr *inp);\n\n"})}),"\n",(0,r.jsx)(e.h2,{id:"64-tcp\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",children:"6.4 TCP\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u670d\u52a1\u5668\u9996\u5148\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff1a\u8c03\u7528\u51fd\u6570socket\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u51fd\u6570bind\u5c06\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e0e\u670d\u52a1\u5668\u7684\u516c\u8ba4\u5730\u5740\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u51fd\u6570listen\u5c06\u8fd9\u4e2a\u5957\u63a5\u5b57\u6362\u6210\u503e\u542c\u5957\u63a5\u5b57\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570accept\u6765\u7b49\u5f85\u5ba2\u6237\u673a\u7684\u8bf7\u6c42\u3002\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u5ba2\u6237\u673a\u542f\u52a8\uff0c\u8c03\u7528socket\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570connect\u6765\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u3002\u8fde\u63a5\u5efa\u7acb\u4e4b\u540e\uff0c\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u901a\u8fc7\u8bfb\u3001\u5199\u5957\u63a5\u5b57\u6765\u8fdb\u884c\u901a\u4fe1\u3002"}),"\n",(0,r.jsxs)(e.h3,{id:"641-\u670d\u52a1\u5668\u7aef\u4ee3\u7801",children:["6.",(0,r.jsx)(e.strong,{children:"4.1"})," \u670d\u52a1\u5668\u7aef\u4ee3\u7801"]}),"\n",(0,r.jsx)(e.p,{children:"\u53c2\u8003\uff1aTCP/server_line.c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'1#include <stdio.h>\n2#include <stdlib.h>\n3#include <string.h>\n4#include <sys/types.h>\n5#include <sys/socket.h>\n6#include <netinet/in.h>\n7#include <arpa/inet.h>\n8#include <unistd.h>\n9#include <signal.h>\n10\n11#define SERVER_PORT 8180\n12#define C_QUEUE     10 \n13\n14/************************************************************\n15*\u51fd\u6570\u529f\u80fd\u63cf\u8ff0\uff1a\u4ece8180\u7aef\u53e3\u63a5\u6536\u5ba2\u6237\u7aef\u6570\u636e\n16*\u8f93\u5165\u53c2\u6570\uff1a\u65e0\n17*\u8f93\u51fa\u53c2\u6570\uff1a\u6253\u5370\u5ba2\u6237IP\u4ee5\u53ca\u53d1\u6765\u7684\u4fe1\u606f\n18*\u8fd4\u56de\u503c\uff1a\u65e0\n19*\u4fee\u6539\u65e5\u671f\t\t\u7248\u672c\u53f7\t\t\u4fee\u6539\u4eba\t\t\u4fee\u6539\u5185\u5bb9\n20*2020/05/13\t\tv1.0.0\t\tzonghzha\treat\n21*************************************************************/\n22\n23int main(int argc, char **argv)\n24{\n25    char buf[512];\n26    int len;\n27    int duty_socket;\n28    int customer_socket;\n29    struct sockaddr_in socket_server_addr;\n30    struct sockaddr_in socket_client_addr;\n31    int ret;\n32    int addr_len;\n33\n34    signal(SIGCHLD, SIG_IGN);\n35\t\n36\t  /* \u670d\u52a1\u5668\u7aef\u5f00\u59cb\u5efa\u7acbsocket\u63cf\u8ff0\u7b26 */\n37    duty_socket = socket(AF_INET, SOCK_STREAM, 0);\n38    if (duty_socket == -1)\n39    {\n40        printf("socket error");\n41        return -1;\n42    }\n43    \n44\t  /* \u670d\u52a1\u5668\u7aef\u586b\u5145 sockaddr_in\u7ed3\u6784 */\n45    socket_server_addr.sin_family   = AF_INET;\n46\t  /* \u7aef\u53e3\u53f7\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f */\n47    socket_server_addr.sin_port     = htons(SERVER_PORT);\n48\t  /* \u63a5\u6536\u672c\u673a\u6240\u6709\u7f51\u53e3\u7684\u6570\u636e */\n49    socket_server_addr.sin_addr.s_addr  = INADDR_ANY;\n50    memset(socket_server_addr.sin_zero, 0, 8);\n51    \n52\t  /* \u6346\u7ed1sockfd\u63cf\u8ff0\u7b26 */\n53    ret = bind(duty_socket, (const struct sockaddr *)&socket_server_addr, sizeof(struct sockaddr));\n54    if (ret == -1)\n55    {\n56        printf("bind error!\\n");\n57        return -1;\n58    }\n59    ret = listen(duty_socket, C_QUEUE);\n60    if (ret == -1)\n61    {\n62        printf("listen error!\\n");\n63        return -1;\n64    }\n65    \n66    while (1)\n67    {\n68        addr_len = sizeof(struct sockaddr);\n69\t\t  /* \u670d\u52a1\u5668\u963b\u585e,\u76f4\u5230\u5ba2\u6237\u7a0b\u5e8f\u5efa\u7acb\u8fde\u63a5 */\n70        customer_socket = accept(duty_socket, (struct sockaddr *)&socket_client_addr, &addr_len);\n71        if (customer_socket != -1)\n72        {\n73\t\t\t  /*inet_ntoa\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a32\u4f4dIpv4\u5730\u5740\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u70b9\u5206\u5341\u8fdb\u5236\u6570\u4e32*/\n74            printf("Get connect from %s\\n", inet_ntoa(socket_client_addr.sin_addr));\n75        }\n76        if (!fork())\n77        {\n78            while (1)\n79            {\n80                memset(buf, 512, 0);\n81\t\t\t\t  /*\u63a5\u6536\u6570\u636e*/\n82                len = recv(customer_socket, buf, sizeof(buf), 0);\n83                buf[len] = \'\\0\';\n84                if (len <= 0)\n85                {\n86                    close(customer_socket);\n87                    return -1;\n88                }\n89                else\n90                {\n91                    printf("Get connect from %s, Msg is %s\\n", inet_ntoa(socket_client_addr.sin_addr), buf);\n92                }\n93            }\n94        }\n95    }\n96    \n97    close(duty_socket);\n98    return 0;\n99}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"642-\u5ba2\u6237\u7aef\u4ee3\u7801",children:"6.4.2 \u5ba2\u6237\u7aef\u4ee3\u7801"}),"\n",(0,r.jsx)(e.p,{children:"\u53c2\u8003\uff1aTCP/client_line.c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'1#include <stdio.h>\n2#include <stdlib.h>\n3#include <string.h>\n4#include <sys/types.h>\n5#include <sys/socket.h>\n6#include <netinet/in.h>\n7#include <arpa/inet.h>\n8#include <unistd.h>\n9\n10#define SERVER_PORT 8180\n11/************************************************************\n12*\u51fd\u6570\u529f\u80fd\u63cf\u8ff0\uff1a\u5411\u6307\u5b9aIP\u76848180\u7aef\u53e3\u53d1\u9001\u6570\u636e\n13*\u8f93\u5165\u53c2\u6570\uff1a\u70b9\u5206\u5341\u8fdb\u5236\u670d\u52a1\u5668IP\n14*\u8f93\u51fa\u53c2\u6570\uff1a\u65e0\n15*\u8fd4\u56de\u503c\uff1a\u65e0\n16*\u4fee\u6539\u65e5\u671f\t\t\u7248\u672c\u53f7\t\t\u4fee\u6539\u4eba\t\t\u4fee\u6539\u5185\u5bb9\n17*2020/05/13\t\tv1.0.0\t\tzonghzha\tcreat\n18*************************************************************/\n19\n20int main(int argc, char **argv)\n21{\n22    unsigned char buf[512];\n23    int len;\n24    struct sockaddr_in socket_server_addr;\n25    int ret;\n26    int addr_len;\n27    int client_socket;\n28\n29    \n30    if (argc != 2)\n31    {\n32        printf("Usage:\\n");\n33        printf("%s <server_ip>\\n", argv[0]);\n34        return -1;\n35    }\n36    \n37    /* \u5ba2\u6237\u7a0b\u5e8f\u5f00\u59cb\u5efa\u7acb sockfd\u63cf\u8ff0\u7b26 */\n38    client_socket = socket(AF_INET, SOCK_STREAM, 0);\n39    if (client_socket == -1)\n40    {\n41        printf("socket error");\n42        return -1;\n43    }\n44    \n45\t  /* \u5ba2\u6237\u7a0b\u5e8f\u586b\u5145\u670d\u52a1\u7aef\u7684\u8d44\u6599 */\n46    socket_server_addr.sin_family   = AF_INET;\n47\t  /*\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f*/\n48    socket_server_addr.sin_port     = htons(SERVER_PORT);\n49    if (inet_aton(argv[1], &socket_server_addr.sin_addr) == 0)\n50    {\n51        printf("invalid server ip\\n");\n52        return -1;\n53    }\n54    memset(socket_server_addr.sin_zero, 0, 8);\n55    /* \u5ba2\u6237\u7a0b\u5e8f\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42 */\n56    ret = connect(client_socket, (const struct sockaddr *)&socket_server_addr, sizeof(struct sockaddr));\n57    if (ret == -1)\n58    {\n59        printf("connect error!\\n");\n60        return -1;\n61    }\n62\n63    \n64    while (1)\n65    {\n66        if (fgets(buf, sizeof(buf), stdin))\n67        {\n68            len = send(client_socket, buf, strlen(buf), 0);\n69            if (len <= 0)\n70            {\n71                close(client_socket);\n72                return -1;\n73            }\n74        }\n75    }\n76    \n77    close(client_socket);\n78    return 0;\n79}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"643-makefile\u6587\u4ef6",children:"6.4.3 Makefile\u6587\u4ef6"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"all:server client\nserver:server.c\n\tgcc $^ -o $@\nclient:client.c\n\tgcc $^ -o $@\nclean:\n\trm server client -f\n\n\uff08\u6ce8\u610f\uff1a\u547d\u4ee4\u8bed\u53e5\u7684\u5f00\u5934\u8981\u7528\u201cTab\u201d\u952e\u3002\uff09\n"})}),"\n",(0,r.jsx)(e.h3,{id:"644-\u6267\u884c",children:"6.4.4 \u6267\u884c"}),"\n",(0,r.jsx)(e.p,{children:"\u670d\u52a1\u5668\u7aef\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"./server\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u7aef\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"./client 127.0.0.1\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u7aef\u8f93\u5165\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"good night\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u670d\u52a1\u5668\u7aef\u663e\u793a\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"Get connect from 127.0.0.1\nGet connect from 127.0.0.1, Msg is good night\n"})}),"\n",(0,r.jsx)(e.h2,{id:"65-udp\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b",children:"6.5 UDP\u7f16\u7a0b\u7b80\u5355\u793a\u4f8b"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\tUDP\u670d\u52a1\u5668\u9996\u5148\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\uff1a\u8c03\u7528\u51fd\u6570socket\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u62a5\u7c7b\u578b\u7684\u5957\u63a5\u5b57\uff0c\u51fd\u6570bind\u5c06\u8fd9\u4e2a\u5957\u63a5\u5b57\u4e0e\u670d\u52a1\u5668\u7684\u516c\u8ba4\u5730\u5740\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002\u7136\u540e\u8c03\u7528\u51fd\u6570recvfrom\u63a5\u6536UDP\u5ba2\u6237\u673a\u7684\u6570\u636e\u62a5\u3002UDP\u5ba2\u6237\u673a\u9996\u5148\u8c03\u7528\u51fd\u6570socket\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u62a5\u5957\u63a5\u5b57\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570sendto\u5411\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u62a5\u3002\u5728\u7ed3\u675f\u901a\u4fe1\u540e\uff0c\u5ba2\u6237\u673a\u8c03\u7528close\u5173\u95edUDP\u5957\u63a5\u5b57\uff0c\u670d\u52a1\u5668\u7ee7\u7eed\u4f7f\u7528\u8fd9\u4e2aUDP\u5957\u63a5\u5b57\u63a5\u6536\u5176\u5b83\u5ba2\u6237\u673a\u7684\u6570\u636e\u62a5\u3002"}),"\n",(0,r.jsxs)(e.h3,{id:"651-\u670d\u52a1\u5668\u7aef\u4ee3\u7801",children:["6.",(0,r.jsx)(e.strong,{children:"5.1"})," \u670d\u52a1\u5668\u7aef\u4ee3\u7801"]}),"\n",(0,r.jsx)(e.p,{children:"\u53c2\u8003UDP/server_line.c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'1#include <stdio.h>\n2#include <stdlib.h>\n3#include <string.h>\n4//#include <sys/type.h>\n5#include <sys/socket.h>\n6#include <netinet/in.h>\n7#include <arpa/inet.h>\n8#include <unistd.h>\n9#include <signal.h>\n10\n11/*\u670d\u52a1\u5668\u7aef\u53e3\u4e3a8180*/\n12#define SERVER_PORT 8180\n13\n14/************************************************************\n15*\u51fd\u6570\u529f\u80fd\u63cf\u8ff0\uff1a\u4ece8180\u7aef\u53e3\u63a5\u6536\u5ba2\u6237\u7aef\u6570\u636e\n16*\u8f93\u5165\u53c2\u6570\uff1a\u65e0\n17*\u8f93\u51fa\u53c2\u6570\uff1a\u6253\u5370\u5ba2\u6237IP\u4ee5\u53ca\u53d1\u6765\u7684\u4fe1\u606f\n18*\u8fd4\u56de\u503c\uff1a\u65e0\n19*\u4fee\u6539\u65e5\u671f\t\t\t\u7248\u672c\u53f7\t\t\t\u4fee\u6539\u4eba\t\t\t\u4fee\u6539\u5185\u5bb9\n20*2020/05/13\t\t\tv1.0.0\t\t\tzonghzha\t\tcreat\n21*************************************************************/\n22\n23\n24int main(int argc, char **argv)\n25{\n26    unsigned char buf[512];\n27    int len;\n28    int duty_socket;\n29    int customer_socket;\n30    struct sockaddr_in socket_server_addr;\n31    struct sockaddr_in socket_client_addr;\n32    int ret;\n33    int addr_len;\n34\n35\t  /* \u521b\u5efa\u6570\u636e\u62a5\u5957\u63a5\u5b57 */\n36    duty_socket = socket(AF_INET, SOCK_DGRAM, 0);\n37    if (duty_socket == -1)\n38    {\n39        printf("socket error");\n40        return -1;\n41    }\n42    \n43\t  /* \u670d\u52a1\u5668\u7aef\u586b\u5145 sockaddr_in\u7ed3\u6784 */\n44    socket_server_addr.sin_family   = AF_INET;\n45    socket_server_addr.sin_port     = htons(SERVER_PORT);\n46    socket_server_addr.sin_addr.s_addr  = INADDR_ANY;\n47    memset(socket_server_addr.sin_zero, 0, 8);\n48    \n49\t  /*\u7ed1\u5b9a\u5957\u63a5\u5b57*/\n50    ret = bind(duty_socket, (const struct sockaddr *)&socket_server_addr, sizeof(struct sockaddr));\n51    if (ret == -1)\n52    {\n53        printf("bind error!\\n");\n54        return -1;\n55    }\n56\n57    \n58    while (1)\n59    {\n60        addr_len = sizeof(struct sockaddr);\n61\t\t  /* \u63a5\u6536\u5ba2\u6237\u7aef\u6570\u636e\u62a5\uff0c\u8fd4\u56de\u7684\u4e3a\u63a5\u6536\u5230\u7684\u5b57\u8282\u6570 */ \n62        len = recvfrom(duty_socket, buf, sizeof(buf), 0, (struct sockaddr *)&socket_client_addr, &addr_len);\n63        if (len > 0)\n64        {\n65            buf[len] = \'\\0\';\n66            printf("Get Msg from %s : %s\\n", inet_ntoa(socket_client_addr.sin_addr), buf);\n67        }\n68   \n69    }\n70    \n71    close(duty_socket);\n72    return 0;\n73}\n74\n'})}),"\n",(0,r.jsxs)(e.h3,{id:"652-\u5ba2\u6237\u7aef\u4ee3\u7801",children:[(0,r.jsx)(e.strong,{children:"6.5.2"})," ",(0,r.jsx)(e.strong,{children:"\u5ba2\u6237\u7aef\u4ee3\u7801"})]}),"\n",(0,r.jsxs)(e.h4,{id:"6521-\u5ba2\u6237\u7aef\u7a0b\u5e8f1",children:["6.",(0,r.jsx)(e.strong,{children:"5.2.1"})," \u5ba2\u6237\u7aef\u7a0b\u5e8f1"]}),"\n",(0,r.jsx)(e.p,{children:"\u53c2\u8003UDP/client_line_1.c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'1#include <stdio.h>\n2#include <stdlib.h>\n3#include <string.h>\n4#include <sys/socket.h>\n5#include <netinet/in.h>\n6#include <arpa/inet.h>\n7#include <unistd.h>\n8\n9#define SERVER_PORT 8180\n10\n11/************************************************************\n12*\u51fd\u6570\u529f\u80fd\u63cf\u8ff0\uff1a\u5411\u6307\u5b9aIP\u76848180\u7aef\u53e3\u53d1\u9001\u6570\u636e\n13*\u8f93\u5165\u53c2\u6570\uff1a\u70b9\u5206\u5341\u8fdb\u5236\u670d\u52a1\u5668IP\n14*\u8f93\u51fa\u53c2\u6570\uff1a\u65e0\n15*\u8fd4\u56de\u503c\uff1a\u65e0\n16*\u4fee\u6539\u65e5\u671f\t\t\t\u7248\u672c\u53f7\t\t\t\u4fee\u6539\u4eba\t\t\t\u4fee\u6539\u5185\u5bb9\n17*2020/05/13\t\t\tv1.0.0\t\t\tzonghzha\t\tcreat\n18*************************************************************/\n19\n20int main(int argc, char **argv)\n21{\n22    unsigned char buf[512];\n23    int len;\n24    struct sockaddr_in socket_server_addr;\n25    int ret;\n26    int addr_len;\n27    int client_socket;\n28\n29    \n30    if (argc != 2)\n31    {\n32        printf("Usage:\\n");\n33        printf("%s <server_ip>\\n", argv[0]);\n34        return -1;\n35    }\n36    \n37    /*\u521b\u5efa\u5957\u63a5\u5b57*/\n38    client_socket = socket(AF_INET, SOCK_DGRAM, 0);\n39    if (client_socket == -1)\n40    {\n41        printf("socket error");\n42        return -1;\n43    }\n44    \n45\t  /* \u586b\u5145\u670d\u52a1\u7aef\u7684\u8d44\u6599 */\n46    socket_server_addr.sin_family   = AF_INET;\n47    socket_server_addr.sin_port     = htons(SERVER_PORT);\n48    if (inet_aton(argv[1], &socket_server_addr.sin_addr) == 0)\n49    {\n50        printf("invalid server ip\\n");\n51        return -1;\n52    }\n53    memset(socket_server_addr.sin_zero, 0, 8);\n54    \n55\n56\n57    \n58    while (1)\n59    {\n60        if (fgets(buf, sizeof(buf), stdin))\n61        {\n62 //           len = send(client_socket, buf, strlen(buf), 0);\n63\t\t\t  /*\u5411\u670d\u52a1\u5668\u7aef\u53d1\u9001\u6570\u636e\u62a5*/\n64            addr_len = sizeof(struct sockaddr);\n65            len = sendto(client_socket, buf, sizeof(buf), 0, (struct sockaddr *)&socket_server_addr, addr_len);\n66            if (len <= 0)\n67            {\n68                close(client_socket);\n69                return -1;\n70            }\n71        }\n72    }\n73    \n74    close(client_socket);\n75    return 0;\n76}\n77\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u95ee\uff1a\u7528UDP\u534f\u8bae\u5199\u7f51\u7edc\u901a\u8baf\u7a0b\u5e8f\u4e0d\u53ef\u4ee5\u7528connect\u51fd\u6570\u5417\uff1f"}),"\n",(0,r.jsx)(e.p,{children:"\u7b54\uff1a\u975e\u4e5f\u3002"}),"\n",(0,r.jsxs)(e.h4,{id:"6522-\u5ba2\u6237\u7aef\u7a0b\u5e8f2",children:["6.",(0,r.jsx)(e.strong,{children:"5.2.2"})," ",(0,r.jsx)(e.strong,{children:"\u5ba2\u6237\u7aef\u7a0b\u5e8f2"})]}),"\n",(0,r.jsx)(e.p,{children:"\u53c2\u8003UDP/client_line_2.c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:'1#include <stdio.h>\n2#include <stdlib.h>\n3#include <string.h>\n4#include <sys/socket.h>\n5#include <netinet/in.h>\n6#include <arpa/inet.h>\n7#include <unistd.h>\n8\n9/*\u670d\u52a1\u5668\u7aef\u53e3\u4e3a8180*/\n10#define SERVER_PORT 8180\n11\n12/************************************************************\n13*\u51fd\u6570\u529f\u80fd\u63cf\u8ff0\uff1a\u5411\u6307\u5b9aIP\u76848180\u7aef\u53e3\u53d1\u9001\u6570\u636e\n14*\u8f93\u5165\u53c2\u6570\uff1a\u70b9\u5206\u5341\u8fdb\u5236\u670d\u52a1\u5668IP\n15*\u8f93\u51fa\u53c2\u6570\uff1a\u65e0\n16*\u8fd4\u56de\u503c\uff1a\u65e0\n17*\u4fee\u6539\u65e5\u671f\t\t\t\u7248\u672c\u53f7\t\t\t\u4fee\u6539\u4eba\t\t\t\u4fee\u6539\u5185\u5bb9\n18*2020/05/13\t\t\tv1.0.0\t\t\tzonghzha\t\tcreat\n19*************************************************************/\n20\n21int main(int argc, char **argv)\n22{\n23    unsigned char buf[512];\n24    int len;\n25    struct sockaddr_in socket_server_addr;\n26    int ret;\n27    int addr_len;\n28    int client_socket;\n29\n30    \n31    if (argc != 2)\n32    {\n33        printf("Usage:\\n");\n34        printf("%s <server_ip>\\n", argv[0]);\n35        return -1;\n36    }\n37    \n38    /*\u521b\u5efa\u6570\u636e\u62a5\u5957\u63a5\u5b57*/\n39    client_socket = socket(AF_INET, SOCK_DGRAM, 0);\n40    if (client_socket == -1)\n41    {\n42        printf("socket error");\n43        return -1;\n44    }\n45    \n46    socket_server_addr.sin_family   = AF_INET;\n47    socket_server_addr.sin_port     = htons(SERVER_PORT);\n48    if (inet_aton(argv[1], &socket_server_addr.sin_addr) == 0)\n49    {\n50        printf("invalid server ip\\n");\n51        return -1;\n52    }\n53    memset(socket_server_addr.sin_zero, 0, 8);\n54    \n55    ret = connect(client_socket, (const struct sockaddr *)&socket_server_addr, sizeof(struct sockaddr));\n56    if (ret == -1)\n57    {\n58        printf("connect error!\\n");\n59        return -1;\n60    }\n61\n62    \n63    while (1)\n64    {\n65        if (fgets(buf, sizeof(buf), stdin))\n66        {\n67            len = send(client_socket, buf, strlen(buf), 0);\n68            if (len <= 0)\n69            {\n70                close(client_socket);\n71                return -1;\n72            }\n73        }\n74    }\n75    \n76    close(client_socket);\n77    return 0;\n78}\n79\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u5728\u5ba2\u6237\u7aef\u4ee3\u78012\u4e2d\uff0cconnect\u51fd\u6570\u5e76\u975e\u771f\u7684\u5728\u534f\u8bae\u5c42\u5efa\u7acb\u4e86\u8fde\u63a5\uff0c\u5b83\u53ea\u662f\u6307\u5b9a\u4e86\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7\u4fe1\u606f\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u200b\t\t\u56e0\u4e3a\u5728connect\u4e2d\u6307\u5b9a\u4e86\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u7aef\u53e3\u53f7\u4fe1\u606f\uff0c\u6240\u4ee5\u540e\u9762\u7684send\u5c31\u53ef\u4ee5\u76f4\u63a5\u53d1\u9001\u4e86\uff0c\u800c\u4e0d\u7528\u518d\u6b21\u6307\u5b9a\u5730\u5740\u548c\u7aef\u53e3\u53f7\u3002"}),"\n",(0,r.jsx)(e.h3,{id:"653-makefile\u6587\u4ef6",children:"6.5.3 Makefile\u6587\u4ef6"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"all:server client_1 client_2\nserver:server.c\n\tgcc $^ -o $@\nclient_1:client_1.c\n\tgcc $^ -o $@\nclient_2:client_2.c\n\tgcc $^ -o $@\nclean:\n\trm server client_1 client_2 -f\n\n\uff08\u6ce8\u610f\uff1a\u547d\u4ee4\u8bed\u53e5\u7684\u5f00\u5934\u8981\u7528\u201cTab\u201d\u952e\u3002\uff09\n"})}),"\n",(0,r.jsx)(e.h3,{id:"654-\u6267\u884c",children:"6.5.4 \u6267\u884c"}),"\n",(0,r.jsx)(e.p,{children:"\u670d\u52a1\u5668\u7aef\u6267\u884c\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"./server\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u7aef\u6267\u884c\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"./client_1 127.0.0.1\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u5ba2\u6237\u7aef\u8f93\u5165\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"good night\n"})}),"\n",(0,r.jsx)(e.p,{children:"\u670d\u52a1\u5668\u7aef\u663e\u793a\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-c",children:"Get Msg from 127.0.0.1 : good night\n"})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>d,x:()=>i});var r=s(6540);const t={},c=r.createContext(t);function d(n){const e=r.useContext(c);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:d(n.components),r.createElement(c.Provider,{value:e},n.children)}}}]);